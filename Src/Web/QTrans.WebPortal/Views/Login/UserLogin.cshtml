@model QTrans.WebPortal.Models.Login.UserLogin
<style>
    /*body {
        font-family: Arial, Helvetica, sans-serif;
    }*/

    /* Full-width input fields */
    input[type=text], input[type=password] {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        display: inline-block;
        border: 1px solid #ccc;
        box-sizing: border-box;
    }

    /* Set a style for all buttons */
    button {
        background-color: #4CAF50;
        color: white;
        padding: 14px 20px;
        margin: 8px 0;
        border: none;
        cursor: pointer;
    }

        button:hover {
            opacity: 0.8;
        }

    /* Extra styles for the cancel button */
    .cancelbtn {
        width: auto;
        padding: 10px 18px;
        background-color: #f44336;
    }

    /* Center the image and position the close button */
    .imgcontainer {
        text-align: center;
        margin: 24px 0 12px 0;
        position: relative;
    }

    /*img.avatar {
        width: 40%;
        border-radius: 50%;
    }*/

    /*.container {
        padding: 16px;
    }*/

    /*span.psw {
        float: right;
        margin-bottom: 16px;
    }*/

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        padding-top: 60px;
    }

    /* Modal Content/Box */
    .modal-content {
        background-color: #fefefe;
        margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */
        border: 1px solid #888;
        width: 40%; /* Could be more or less, depending on screen size */
    }

    /* The Close Button (x) */
    .close {
        position: absolute;
        right: 25px;
        top: 0;
        color: #000;
        font-size: 35px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: red;
            cursor: pointer;
        }

    /* Add Zoom Animation */
    .animate {
        -webkit-animation: animatezoom 0.6s;
        animation: animatezoom 0.6s
    }

    @@-webkit-keyframes animatezoom {
        from {
            -webkit-transform: scale(0)
        }

        to {
            -webkit-transform: scale(1)
        }
    }

    @@keyframes animatezoom {
        from {
            transform: scale(0)
        }

        to {
            transform: scale(1)
        }
    }

    /* Change styles for span and cancel button on extra small screens */
    @@media screen and (max-width: 300px) {
        span.psw {
            display: block;
            float: right;
        }

        .cancelbtn {
            width: 100%;
        }
    }
</style>
<script>
    //// Get the modal
    //    var modal = document.getElementById('id01');
    function CloseWindow() {
        //alert(document.getElementById('id01'));
        var modal = document.getElementById('id01');
            modal.style.display = "none";
    }
    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        var modal = document.getElementById('id01');      
        if (event.target == modal) {          
            modal.style.display = "none";
        }
    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div id="id01" class="modal">
    <div class="modal-content animate">
        <div class="imgcontainer">
            <span onclick="CloseWindow()" class="close"
                  title="Close Modal">&times;</span>

        </div>
        <div class="container">
            <h4>UserLogin</h4>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Mobile No OR Email Address" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "Enter Password" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                <button type="submit">Login</button>
                <span></span>
                <button type="button" onclick="CloseWindow()" style="background-color:red">
                    Cancel
                </button>
            </div>
            <div>
                <label>
                    <input type="checkbox" checked="checked" name="remember"> Remember me

                </label>
            </div>
            <div>
                <span class="psw"><a href="#">Forgot password?</a></span>
            </div>
            @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>*@
        </div>

    </div>

</div>
        }
  
