@model QTrans.Models.PostingProfile

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_PrivateLayout.cshtml";
}



@{
    List<QTrans.Models.MaterialType> listMaterialItems = new QTrans.Repositories.Repositories.CommonRepository().GetMaterialType();
    List<QTrans.Models.PackageType> listPackageItems = new QTrans.Repositories.Repositories.CommonRepository().GetPackageType();

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="col-lg-12">
        <div class="card" style="border:none">
            <div class="card-header">
                <strong>Create Posting Profile</strong>
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="card-body card-block">
                <div class="row form-group" style="visibility:hidden;display:none ">
                    @Html.LabelFor(model => model.postingid, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.postingid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.postingid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.posttype, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        &nbsp; &nbsp;
                        @Html.RadioButtonFor(m => m.posttype, "Single") Single &nbsp; &nbsp;
                        @Html.RadioButtonFor(m => m.posttype, "Contract")  Contract
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="card-header" style="margin-bottom:15px;">Form Address :</div>

                    <div class="row form-group">
                        @Html.LabelFor(model => model.soureaddress, htmlAttributes: new { @class = "form-control-label" })
                        <div class="col-12 col-sm-6">
                            @Html.EditorFor(model => model.soureaddress, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.soureaddress) } })
                            @Html.ValidationMessageFor(model => model.soureaddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.LabelFor(model => model.src_landmark, htmlAttributes: new { @class = "form-control-label" })
                        <div class="col-12 col-sm-6">
                            @Html.EditorFor(model => model.src_landmark, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.src_landmark) } })
                            @Html.ValidationMessageFor(model => model.src_landmark, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.LabelFor(model => model.src_city, htmlAttributes: new { @class = "form-control-label" })
                        <div class="col-12 col-sm-6">
                            @Html.EditorFor(model => model.src_city, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.src_city) } })
                            @Html.ValidationMessageFor(model => model.src_city, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row form-group">
                        @Html.LabelFor(model => model.src_state, htmlAttributes: new { @class = "form-control-label" })
                        <div class="col-12 col-sm-6">
                            @Html.EditorFor(model => model.src_state, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.src_state) } })
                            @Html.ValidationMessageFor(model => model.src_state, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.LabelFor(model => model.src_pincode, htmlAttributes: new { @class = "form-control-label" })
                        <div class="col-12 col-sm-6">
                            @Html.EditorFor(model => model.src_pincode, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.src_pincode) } })
                            @Html.ValidationMessageFor(model => model.src_pincode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>                   
                <div class="col-lg-6">
                        <div class="card-header" style="margin-bottom:15px;">To Address :</div>
                            <div class="row form-group">
                                @Html.LabelFor(model => model.destinationadress, htmlAttributes: new { @class = "form-control-label" })
                                <div class="col-12 col-sm-6">
                                    @Html.EditorFor(model => model.destinationadress, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.destinationadress) } })
                                    @Html.ValidationMessageFor(model => model.destinationadress, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row form-group">
                                @Html.LabelFor(model => model.dst_landmark, htmlAttributes: new { @class = "form-control-label" })
                                <div class="col-12 col-sm-6">
                                    @Html.EditorFor(model => model.dst_landmark, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.dst_landmark) } })
                                    @Html.ValidationMessageFor(model => model.dst_landmark, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                @Html.LabelFor(model => model.dst_city, htmlAttributes: new { @class = "form-control-label" })
                                <div class="col-12 col-sm-6">
                                    @Html.EditorFor(model => model.dst_city, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.dst_city) } })
                                    @Html.ValidationMessageFor(model => model.dst_city, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                @Html.LabelFor(model => model.dst_state, htmlAttributes: new { @class = "form-control-label" })
                                <div class="col-12 col-sm-6">
                                    @Html.EditorFor(model => model.dst_state, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.dst_state) } })
                                    @Html.ValidationMessageFor(model => model.dst_state, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row form-group">
                                @Html.LabelFor(model => model.dst_pincode, htmlAttributes: new { @class = "form-control-label" })
                                <div class="col-12 col-sm-6">
                                    @Html.EditorFor(model => model.dst_pincode, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.dst_pincode) } })
                                    @Html.ValidationMessageFor(model => model.dst_pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>                       
                </div>


                            <div class="row form-group  col-sm-6">
                                @Html.LabelFor(model => model.materialtypeid, htmlAttributes: new { @class = "form-control-label" })
                                <div class="col-12">
                                    @Html.DropDownListFor(model => model.materialtypeid, new SelectList(listMaterialItems, "materialtypeid", "materialtype"), "-- Select --")
                                    @*@Html.EditorFor(model => model.materialtypeid, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.materialtypeid) } })
                            @Html.ValidationMessageFor(model => model.materialtypeid, "", new { @class = "text-danger" })*@
                                </div>
                            </div>

                            <div class="form-group  col-sm-6">
                                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "form-control-label" })
                                <div class="col-12">
                                    @Html.TextAreaFor(model => model.description, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.description) } })
                                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group  col-sm-6">
                                @Html.LabelFor(model => model.packagetypeid, htmlAttributes: new { @class = "form-control-label" })
                                <div class="col-12">
                                    @Html.DropDownListFor(model => model.packagetypeid, new SelectList(listPackageItems, "packagetypeid", "packagetype"), "-- Select --")
                                    @*@Html.EditorFor(model => model.packagetypeid, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.packagetypeid) } })
                            @Html.ValidationMessageFor(model => model.packagetypeid, "", new { @class = "text-danger" })*@
                                </div>
                            </div>

                            <div class="form-group  col-sm-6">
                                @Html.LabelFor(model => model.packagetypedesc, htmlAttributes: new { @class = "form-control-label" })
                                <div class="col-12">
                                    @Html.TextAreaFor(model => model.packagetypedesc, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.packagetypedesc) } })
                                    @Html.ValidationMessageFor(model => model.packagetypedesc, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="card-footer">
                                <button type="submit" class="btn btn-success btn-sm">
                                    <i class="fa fa-dot-circle-o"></i> Submit
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                }
