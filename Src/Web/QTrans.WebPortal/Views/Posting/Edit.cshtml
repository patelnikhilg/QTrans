@model QTrans.Models.PostingProfile

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_PrivateLayout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="col-lg-12">
        <div class="card" style="border:none">
            <div class="card-header">
                <strong>Edit Posting Profile</strong>
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="card-body card-block">
                <div class="row form-group">
                    @Html.LabelFor(model => model.postingid, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.postingid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.postingid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.posttype, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.posttype, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.posttype, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.userid, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.userid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.userid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.soureaddress, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.soureaddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.soureaddress, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(model => model.src_landmark, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.src_landmark, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.src_landmark, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(model => model.src_city, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.src_city, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.src_city, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(model => model.src_state, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.src_state, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.src_state, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(model => model.src_pincode, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.src_pincode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.src_pincode, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="row form-group">
                    @Html.LabelFor(model => model.destinationadress, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.destinationadress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.destinationadress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.dst_landmark, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.dst_landmark, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.dst_landmark) } })
                        @Html.ValidationMessageFor(model => model.dst_landmark, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(model => model.dst_city, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.dst_city, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.dst_city) } })
                        @Html.ValidationMessageFor(model => model.dst_city, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(model => model.dst_state, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.dst_state, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.dst_state) } })
                        @Html.ValidationMessageFor(model => model.dst_state, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.dst_pincode, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.dst_pincode, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.dst_pincode) } })
                        @Html.ValidationMessageFor(model => model.dst_pincode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(model => model.materialtypeid, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.materialtypeid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.materialtypeid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.packagetypeid, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.packagetypeid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.packagetypeid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.packagetypedesc, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.packagetypedesc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.packagetypedesc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.createddate, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.createddate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.createddate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.modifydate, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-12 col-sm-6">
                        @Html.EditorFor(model => model.modifydate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.modifydate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="card-footer">
                    <button type="submit" class="btn btn-success btn-sm">
                        <i class="fa fa-dot-circle-o"></i> Submit
                    </button>
                    <button type="reset" class="btn btn-danger btn-sm">
                        <i class="fa fa-ban"></i> Reset
                    </button>
                </div>
            </div>
        </div>
    </div>
}

