@model QTrans.WebPortal.Models.Users.ChangePassword

@{
    ViewBag.Title = "UpdatePassword";
    Layout = "~/Views/Shared/_PrivateLayout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card" style="border:none">
        <div class="card-header">
            <strong>Change Password</strong>
        </div>
        @if (@ViewBag.Message != null)
        {
            <div id="popupdiv" class="alert alert-success">
                @ViewBag.Message
            </div>
        }
        else if (@ViewBag.MessageFail != null)
        {
            <div id="popupdiv" class="alert alert-danger">
                @ViewBag.Message
            </div>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card-body">
            <div class="row form-group col-12">
                @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control  col-md-3" } })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>

            <div class="row form-group col-12">
                @Html.LabelFor(model => model.Newpassword, htmlAttributes: new { @class = "form-control-label col-md-2" })
                @Html.EditorFor(model => model.Newpassword, new { htmlAttributes = new { @class = "form-control col-md-3" } })
                @Html.ValidationMessageFor(model => model.Newpassword, "", new { @class = "text-danger", placeholder = @Html.DisplayNameFor(m => m.Newpassword) })
            </div>

            <div class="row form-group col-12">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-control-label col-md-2" })
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control col-md-3" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger", placeholder = @Html.DisplayNameFor(m => m.ConfirmPassword) })
            </div>

            <div>
                <button type="submit" class="btn btn-success btn-sm">
                    <i class="fa fa-dot-circle-o"></i> Submit
                </button>
                <button type="reset" class="btn btn-danger btn-sm">
                    <i class="fa fa-ban"></i> Cancel
                </button>
            </div>
        </div>
    </div>
}

