@model QTrans.Models.UserProfile

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });

        $(function () {
            $('.btnNext').click(function () {
                $('.nav-tabs > .active').next('li').find('a').trigger('click');
            });

            $('.btnPrevious').click(function () {
                $('.nav-tabs > .active').prev('li').find('a').trigger('click');
            });
        })
    </script>

}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Edit User Profile</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div id="wizard">
            <!-- Tabstrip -->
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a href="#personal" role="tab" data-toggle="tab">Personal</a>
                </li>
                <li role="presentation">
                    <a href="#Address" role="tab" data-toggle="tab">Contact</a>
                </li>
                <li role="Identity">
                    <a href="#Identity" role="tab" data-toggle="tab">Identity</a>
                </li>
            </ul>
            <!-- Tab panes -->
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="personal" style="margin-top:15px">
                    <div class="form-group" style="visibility:hidden">
                        @Html.LabelFor(model => model.userid, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userid, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userid) } })
                            @Html.ValidationMessageFor(model => model.userid, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <!-- Input fields -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.firstname) } })
                            @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.middlename, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.middlename, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.middlename) } })
                            @Html.ValidationMessageFor(model => model.middlename, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.lastname) } })
                            @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.emailaddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.emailaddress, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.emailaddress) } })
                            @Html.ValidationMessageFor(model => model.emailaddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.mobilenumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.mobilenumber, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.mobilenumber) } })
                            @Html.ValidationMessageFor(model => model.mobilenumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.Password), type = "password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.dob, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.dob, new { htmlAttributes = new { @class = "form-control", placeholder = "Date Of Birth", @readonly = "true" } })
                            @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @*<a class="btn-all btnNext">Next</a>*@
                            <input value="Next" class="btn btn-default btnNext" />
                        </div>
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane" id="Address" style="margin-top:15px">
                    <!-- Input fields -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.landlinenumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.landlinenumber, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.landlinenumber) } })
                            @Html.ValidationMessageFor(model => model.landlinenumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.addressline1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.addressline1, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.addressline1) } })
                            @Html.ValidationMessageFor(model => model.addressline1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.addressline2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.addressline2, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.addressline2) } })
                            @Html.ValidationMessageFor(model => model.addressline2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.pincode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.pincode, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.pincode) } })
                            @Html.ValidationMessageFor(model => model.pincode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.country) } })
                            @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.state) } })
                            @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.district, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.district, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.district) } })
                            @Html.ValidationMessageFor(model => model.district, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.city) } })
                            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @*<a class="btn-all btnPrevious">Previous</a>
                                <a class="btn-all btnNext">Next</a>*@
                            <input value="Previous" class="btn btn-default btnPrevious" />
                            <input value="Next" class="btn btn-default btnNext" />
                        </div>
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane" id="Identity" style="margin-top:15px">
                    <!-- Input fields -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.photo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.photo, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.photo) } })
                            @Html.ValidationMessageFor(model => model.photo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.area, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.area, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.area) } })
                            @Html.ValidationMessageFor(model => model.area, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.pan, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.pan, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.pan) } })
                            @Html.ValidationMessageFor(model => model.pan, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.gst, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.gst, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.gst) } })
                            @Html.ValidationMessageFor(model => model.gst, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.aadhaarno, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.aadhaarno, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.aadhaarno) } })
                            @Html.ValidationMessageFor(model => model.aadhaarno, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10" style="float:left;">
                            <input value="Previous" class="btn btn-default btnPrevious" />
                            <span></span>
                            <input type="submit" value="Submit" class="btn btn-default" />
                        </div>
                    </div>
                </div>

            </div>

        </div>
    </div>
}

