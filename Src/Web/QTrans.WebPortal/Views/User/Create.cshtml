@model QTrans.WebPortal.Models.Users.UserCompany
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_PublicLayout.cshtml";
}
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });

        $(function () {
            $('.btnNext').click(function () {
                $('.nav-tabs > .active').next('li').find('a').trigger('click');
            });

            $('.btnPrevious').click(function () {
                $('.nav-tabs > .active').prev('li').find('a').trigger('click');
            });
        })

        // cache elements that you repeatedly reference
        var UserType = $('#UserType');
        UserType.hide();
        $('input[type=radio][name=rbtuserType]').change(function () {
            if ($(this).val() === 'Vendor') {
                UserType.show();              
            } else {
                UserType.hide();
                
            }
        });
       
    </script>

}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User Profile</h4>
        <hr />
        @if (@ViewBag.Message != null)
        {
            <div id="popupdiv" class="alert alert-success">
                @ViewBag.Message
            </div>
        }
        else if (@ViewBag.MessageFail != null)
        {
            <div id="popupdiv" class="alert alert-danger">
                @ViewBag.Message
            </div>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div id="wizard">
            <!-- Tabstrip -->
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a href="#personal" role="tab" data-toggle="tab">Personal</a>
                </li>
                <li role="presentation">
                    <a href="#Address" role="tab" data-toggle="tab">Contact</a>
                </li>
                <li role="Identity">
                    <a href="#Identity" role="tab" data-toggle="tab">Identity</a>
                </li>
                <li role="CompanyDetails">
                    <a href="#CompanyDetails" role="tab" data-toggle="tab">Company Details</a>
                </li>
            </ul>
            <!-- Tab panes -->
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="personal" style="margin-top:15px">
                    <!-- Input fields -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.firstname, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.firstname) } })
                            @Html.ValidationMessageFor(model => model.userProfile.firstname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.middlename, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.middlename, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.middlename) } })
                            @Html.ValidationMessageFor(model => model.userProfile.middlename, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.lastname, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.lastname) } })
                            @Html.ValidationMessageFor(model => model.userProfile.lastname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.emailaddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.emailaddress, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.emailaddress) } })
                            @Html.ValidationMessageFor(model => model.userProfile.emailaddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.mobilenumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.mobilenumber, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.mobilenumber) } })
                            @Html.ValidationMessageFor(model => model.userProfile.mobilenumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.Password, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.Password), type = "password" } })
                            @Html.ValidationMessageFor(model => model.userProfile.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.dob, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="input-group date" id="ContractStartDateDiv">
                                @Html.EditorFor(model => model.userProfile.dob, new { htmlAttributes = new { @class = "form-control", placeholder = "Date Of Birth", @readonly = "true" } })

                                <label class="input-group-addon btn" for="date">
                                    <span class="fa fa-calendar open-datetimepicker"></span>
                                </label>
                            </div>
                            @Html.ValidationMessageFor(model => model.userProfile.dob, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @*<a class="btn-all btnNext">Next</a>*@
                            <input value="Next" class="btn btn-default btnNext" />
                        </div>
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane" id="Address" style="margin-top:15px">
                    <!-- Input fields -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.landlinenumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.landlinenumber, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.landlinenumber) } })
                            @Html.ValidationMessageFor(model => model.userProfile.landlinenumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.addressline1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.addressline1, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.addressline1) } })
                            @Html.ValidationMessageFor(model => model.userProfile.addressline1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.addressline2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.addressline2, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.addressline2) } })
                            @Html.ValidationMessageFor(model => model.userProfile.addressline2, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.country, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.country, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.country) } })
                            @Html.ValidationMessageFor(model => model.userProfile.country, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.state, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.state, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.state) } })
                            @Html.ValidationMessageFor(model => model.userProfile.state, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.city, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.city, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.city) } })
                            @Html.ValidationMessageFor(model => model.userProfile.city, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.area, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.area, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.area) } })
                            @Html.ValidationMessageFor(model => model.userProfile.area, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.pincode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.pincode, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.pincode) } })
                            @Html.ValidationMessageFor(model => model.userProfile.pincode, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @*<a class="btn-all btnPrevious">Previous</a>
                            <a class="btn-all btnNext">Next</a>*@
                            <input value="Previous" class="btn btn-default btnPrevious" />
                            <input value="Next" class="btn btn-default btnNext" />
                        </div>
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane" id="Identity" style="margin-top:15px">
                    
                    <div class="row" id="UserTypeSection">
                        <div class="form-group">
                            @Html.Label("User Type:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.RadioButtonFor(model => model.userDetails.transporttypeid, "Customer", htmlAttributes: new { @Name = "rbtuserType", @id = "Customer" }) Customer &nbsp; &nbsp;
                                @Html.RadioButtonFor(model => model.userDetails.transporttypeid, "Vendor", htmlAttributes: new { @Name = "rbtuserType", @id = "Vendor" })  Vendor
                            </div>
                        </div>
                        <div id="UserType" class="form-group">
                            <div class="col-md-2"></div>
                            <div class="col-md-6">
                                @foreach (var item in new QTrans.WebPortal.Models.Users.UserCompany().GetVendorType())
                                {
                                    <div class="col-md-10"><input id="chk@(item.ToString())" type="checkbox" value="@item.ToString()" />@item.ToString()</div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.pan, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.pan, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.pan) } })
                            @Html.ValidationMessageFor(model => model.userProfile.pan, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.gst, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.gst, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.gst) } })
                            @Html.ValidationMessageFor(model => model.userProfile.gst, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.aadhaarno, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.userProfile.aadhaarno, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.userProfile.aadhaarno) } })
                            @Html.ValidationMessageFor(model => model.userProfile.aadhaarno, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @*<a class="btn-all btnPrevious">Previous</a>
                            <a class="btn-all btnNext">Next</a>*@
                            <input value="Previous" class="btn btn-default btnPrevious" />
                            <input value="Next" class="btn btn-default btnNext" />
                        </div>
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane" id="CompanyDetails" style="margin-top:15px">
                    <!-- Input fields -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.company.companyname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.company.companyname, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.company.companyname) } })
                            @Html.ValidationMessageFor(model => model.company.companyname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.company.address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.company.address, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.company.address) } })
                            @Html.ValidationMessageFor(model => model.company.address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.company.telenumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.company.telenumber, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.company.telenumber) } })
                            @Html.ValidationMessageFor(model => model.company.telenumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.company.alternettelnumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.company.alternettelnumber, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.company.alternettelnumber) } })
                            @Html.ValidationMessageFor(model => model.company.alternettelnumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.userProfile.country, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.company.country, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.company.country) } })
                            @Html.ValidationMessageFor(model => model.company.country, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.company.state, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.company.state, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.company.state) } })
                            @Html.ValidationMessageFor(model => model.company.state, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.company.city, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.company.city, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.company.city) } })
                            @Html.ValidationMessageFor(model => model.company.city, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10" style="float:left;">
                                <input value="Previous" class="btn btn-default btnPrevious" />
                                <span></span>
                                <input type="submit" value="Register" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>
    </div>
}
