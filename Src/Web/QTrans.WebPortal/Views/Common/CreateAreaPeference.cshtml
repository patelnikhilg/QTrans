@model QTrans.Models.AreaPreferenceParam

@{
    List<QTrans.Models.ViewModel.Common.CountryState> lstState = new QTrans.Repositories.Repositories.CommonRepository().GetState();

}
@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()*@
    <div class="col-lg-12">
        <div class="card" style="border:none">
            <div class="card-header">
                <strong>Area Preference</strong>
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="card-body card-block">
                <div class="row form-group" style="visibility:hidden">
                    @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    State
                    <div class="col-md-10">
                        @Html.DropDownList("State", new SelectList(lstState, "StateId", "State"), "-- Select --", new { @id = "ddlState" })
                    </div>
                </div>
                <div class="row form-group">
                    City
                    <div class="col-md-10" id="City">
                        @Html.DropDownListFor(model => model.CityId, new List<SelectListItem>(), "--Select--", new { @id = "ddlCity" });
                    </div>
                </div>
                <div class="row form-group" style="visibility:hidden">
                    @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "form-control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CityId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div >
                    <button type="submit" class="btn btn-success btn-sm" id="submit">
                        <i class="fa fa-dot-circle-o"></i> Submit
                    </button>
                </div>
            </div>
                </div>
            </div>
@*}*@

<script type="text/javascript">

    $(document).ready(function () {
        $('#ddlState').change(function () {
            $.ajax({
                type: "Get",
                url: "../Common/GetCity",
                data: { stateId: $('#ddlState').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var City = "<select id='ddlCity'>";
                    City = City + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++)
                    {
                        City = City + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    City = City + '</select>';
                    $('#City').html(City);
                }
            });
        });
    });   

    $(document).ready(function () {
        $('#submit').click(function () {
            $.ajax({
                type: "Get",
                url: "../Common/CreateAreaPeference",
                data: { cityId: $('#ddlCity').val() },
                datatype: "json",
                traditional: true,
                success: "Ok",
            });
        });
    });  
</script>
